Base test for server config
---
multiline
/etc/logstash/conf.d/logstash.conf
---
^input \{$
^\s{4}tcp \{$
^\s{8}type => "syslog"$
^\s{8}port => 5678$
^\s{4}\}$
^\s{4}tcp \{$
^\s{8}type => "beat"$
^\s{8}ssl_enable => true$
^\s{8}port => 26001$
^\s{8}mode => "server"$
^\s{8}ssl_cert => "/etc/pki/tls/certs/logstash_cert.pem"$
^\s{8}ssl_key => "/etc/pki/tls/private/logstash_cert_pkcs8.key"$
^\s{8}ssl_key_passphrase => "DUMMY"$
^\s{8}ssl_extra_chain_certs => \[ "/etc/pki/CA/certs/terena-bundle.pem" \]$
^\s{4}\}$
^$
^\}$
^filter \{$
^\s{4}mutate \{$
^\s{8}$
^\s{8}add_field => \{$
^\s{12}"\[@metadata\]\[target_index\]" => "logstash-%\{\+YYYY.MM.dd\}"$
^\s{8}\}$
^\s{4}\}$
^\s{4}if \[type\] == 'remotegelf' \{$
^\s{8}mutate \{$
^\s{12}split => \{$
^\s{16}"tags" => ", "$
^\s{12}\}$
^\s{8}\}$
^\s{4}\}$
^\s{4}else if \[type\] == 'syslog' \{$
^\s{8}grok \{$
^\s{12}add_field => \{$
^\s{16}"received_at" => "%\{@timestamp\}"$
^\s{16}"received_from" => "%\{@source_host\}"$
^\s{12}\}$
^\s{12}break_on_match => true$
^\s{12}named_captures_only => true$
^\s{12}patterns_dir => \[ "/usr/share/grok" \]$
^\s{12}match => \{$
^\s{16}"message" => \["%\{RSYSLOGPREFIX\}%\{SSH_MSG\}","%\{RSYSLOGPREFIX\}%\{MODULECMD_MSG\}","%\{RSYSLOGPREFIX\}%\{LMOD_MSG\}","%\{RSYSLOGPREFIX\}%\{NFS_MSG\}","%\{RSYSLOGPREFIX\}%\{CEPH_MSG\}","%\{RSYSLOGPREFIX\}%\{OPENNEBULA_MSG\}","%\{RSYSLOGPREFIX\}%\{JUBE_MSG\}","%\{RSYSLOGPREFIX\}%\{KEYVALUE_MSG\}","%\{RSYSLOGPREFIX\}%\{QUATTOR_MSG\}","%\{RSYSLOGPREFIX\}%\{SNOOPY_MSG\}","%\{RSYSLOGCUSTOM\}"\]$
^\s{12}\}$
^\s{8}\}$
^\s{8}kv \{$
^\s{12}source => "KEY_EQ_VALUEDATA"$
^\s{8}\}$
^\s{8}date \{$
^\s{12}match => \[ "syslog_timestamp", "yyyy-MM-dd'T'HH:mm:ss.SSSSSSZZ", "yyyy-MM-dd'T'HH:mm:ssZZ" \]$
^\s{8}\}$
^\s{8}if \('_grokparsefailure' not in \[tags\]\) \{$
^\s{12}mutate \{$
^\s{16}replace => \{$
^\s{16}\s{4}"@source_host" => "%\{syslog_hostname\}"$
^\s{16}\s{4}"@message" => "%\{syslog_message\}"$
^\s{16}\}$
^\s{12}\}$
^\s{8}\}$
^\s{8}if \('_grokparsefailure' not in \[tags\] and \[jube_id\]\) \{$
^\s{12}mutate \{$
^\s{16}convert => \{$
^\s{16}\s{4}"success" => "boolean"$
^\s{16}\}$
^\s{12}\}$
^\s{8}\}$
^\s{8}mutate \{$
^\s{12}remove_field => \[ "syslog_hostname", "syslog_message", "syslog_timestamp" \]$
^\s{8}\}$
^\s{8}bytes2human \{$
^\s{12}convert => \{$
^\s{16}"actread" => "bytes"$
^\s{16}"actwrite" => "bytes"$
^\s{16}"objrecovthr" => "bytes"$
^\s{16}"volumeavail" => "bytes"$
^\s{16}"volumedata" => "bytes"$
^\s{16}"volumetotal" => "bytes"$
^\s{16}"volumeused" => "bytes"$
^\s{12}\}$
^\s{8}\}$
^\s{8}if \(\[program\] == "jube"\) \{$
^\s{12}mutate \{$
^\s{16}update => \{$
^\s{16}\s{4}"\[@metadata\]\[target_index\]" => "longterm-%\{\+YYYY\}"$
^\s{16}\}$
^\s{12}\}$
^\s{8}\}$
^\s{4}\}$
^\s{4}else if \[program\] == 'gpfsbeat' \{$
^\s{8}mutate \{$
^\s{12}update => \{$
^\s{16}"\[@metadata\]\[target_index\]" => "longterm-%\{\+YYYY\}"$
^\s{12}\}$
^\s{8}\}$
^\s{4}\}$
^\}$
^output \{$
^\s{4}elasticsearch \{$
^\s{8}template_overwrite => true$
^\s{8}document_type => "%\{@type\}"$
^\s{8}index => "%\{\[@metadata\]\[target_index\]\}"$
^\s{8}hosts => \[ "localhost:9200" \]$
^\s{8}flush_size => 5000$
^\s{4}\}$
^\}$
