# ${license-info}
# ${developer-info}
# ${author-info}


=head1 NAME

NCM::spma - Quattor's package manager

=head1 SYNOPSIS

This document describes how to control the behaviour of the package
manager itself.  For information on how to manage packages with
Quattor, please check
L<http://quattor.org/documentation/2013/04/05/package-management.html>.

=head1 RESOURCES

=over

=item /software/components/spma/active : boolean

activates/deactivates the component.

=item /software/components/spma/unescape : boolean

if defined and set to false, then it is assumed that the package information in
the profile has not been escaped with PAN's escape() function. This setting is
only meaningful when using a tool different than PAN for generating CDB
profiles.

Currently ignored.

=item /software/components/spma/tmpdir : string

If defined, set the path to the temporary directory (for compatibility
with -bad- packages that need to remove the sticky bit from /tmp)

=back

=head2 Flags for Yum processing:

=over

=item /software/components/spma/process_obsoletes : boolean

Make Yum replace obsoleted packages by their recommended counterparts.
Defaults to C<false> to keep backwards compatibility.

=item /software/components/spma/userpkgs : string ("yes|no")

Whether SPMA should keep any packages the user may have installed
manually.

Set to C<no> to make the SPMA take full control of all your software
installations.  Set to C<yes> to preserve any packages you installed
by hand.  If you do so, SPMA will never remove a package.

=item /software/components/spma/userprio : string ("yes|no")

Obsoleted and ignored.

=item /software/components/spma/protectkernel : string ("yes|no")

Obsolete and ignored.  This is delegated to Yum.

=item /software/components/spma/packager : string ("rpm|pkg|..")

Currently only Yum is implemented, and other values are ignored.

=item /software/components/spma/usespmlist : string ("yes|no")

Obsolete.  Currently ignored.

=item /software/components/spma/rpmexclusive: string ("yes|no")

Obsolete.  Currently ignored.

=item /software/components/spma/debug: string ("0|1|2|3|4|5")

Obsolete.  Currently ignored.

=item /software/components/spma/verbose: string ("0|1")

Obsolete.  Currently ignored.

=item /software/components/spma/cachedir: string

Obsolete.  Currently ignored.

=item /software/components/spma/localcache: string ("yes|no")

Obsolete.  Currently ignored.

=item /software/components/spma/proxy: string ("yes|no")

Whether to use a proxy.

=item /software/components/spma/proxytype: string ("forward|reverse")

Type of proxy (reverse or forward).

=item /software/components/spma/proxyhost: string

Comma-separated list of proxy hosts.  If you have a forward proxy you
should specify only one.  You may specify several reverse proxies
here, and they will be appended to the C<baseurl> entry of each
repository's configuration.

=item /software/components/spma/proxyport: string

Port where the proxies are listening.

=item /software/components/spma/run: string ("yes|no")

Whether to actually run Yum operations that may install, remove or
update packages.

=back


=over

=item /software/components/spma/headnode: boolean

Ignored.

=back

=head1 DEPENDENCIES

=head2 Components to be run before:

none.

=head2 Components to be run after:

none. However, since the SPMA is typically used for updating components
in RPM/PKG format, it is convenient to run the SPMA component before any
other.

=head1 FILES

F</etc/spma.conf>, F</var/lib/spma-target.cf>.

=head1 NOTES

This component honors the B<--noaction> mode.

=head1 BUGS

The typing of the CDB entries is yet to be done: for now, all of them are
strings.

=head1 AUTHOR

Original author: German Cancio <German.Cancio@cern.ch>

Author of the Yum-based package manager: Luis Fernando Muñoz Mejías


=head1 SEE ALSO

You must read this document to understand how to manage packages
with Quattor:

L<http://quattor.org/documentation/2013/04/05/package-management.html>,

These links detail experiences and strategies relevant for managing
software installations in large sites:

L<http://quattor.org/documentation/2013/02/07/yum-package-management.html>,
L<http://quattor.org/documentation/2013/01/29/spma-yum-upgrade.html>
L<http://quattor.org/blog/2013/01/29/package-layout-proposal.html>
L<http://quattor.org/blog/2013/03/27/cleaning-up-packages.html>

=cut
